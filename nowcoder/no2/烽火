本题是改写单调stack
所谓单调栈，就是一个栈...通过这个栈可以在O(n)的时间里获得一个数左右比他大的最近的数。、
方法是从左向右遍历，如果栈为空直接push，否则比较stack.top与当前值的大小，如果sta.top() < nowVal直接pop（）此时sta.top()下面的值就是左边比他大中最近的，当前值是右边比他大的值中最近的。
当所有值都被遍历过后，当前站非空，然后按照之前规律进行pop。除非pop后非空，否则就记录。
那对与此题来说需要一些更改，因为存在值相同的情况，假设这种情况

3 2 2 2 2 4
第一个3入栈后连着4个2,然后 这4个2互相之间是可以看到的，所以本身要增加C(2,n)个，
然后着4个2出栈的时候要在增加n个（左边右边肯定都有比他们高的），然后看栈底，如果栈底元素只有1个，那就不加了，因为左右都是同一个山峰，否则在加一个n;
