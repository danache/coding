本题在Two sum的基础上进行计算。我们采取的决策是定一议二。
由于三个数的和为0，先对数组进行排序。然后从小到大扫面，对于每一个数。
在剩余的数组中查找-nums[i]即可。在循环的时候要去重，即每次查看nums[i] == nums[i-1]
如果不相同的话就证明当前的nusm[i]是不重复的.对于每一个i，查找剩余数组中所有的匹配的。
采用两头扫描的方式，左端取i+1,右段取数组尾，一旦和与目标相同，计入结果，否则左加右减。
同时left和right要略过中间重复的
所以
while(left < right && nums[left] == nums[left + 1])
	left++;
while(left < right && nums[right] == nums[right - 1])
	left++;
之后left++,right--到达第一 个不一样的元素。